# 주방장 도도새

# 도도새는 주문이 들어오면 즉석에서 요리를 만드는 요리사입니다. 도도새의 식당에서는 모든 주문은 주문이 들어온 순서대로 처리되며 요리마다 요리에 걸리는 시간이 정해져 있습니다. 그래서 주문이 많이 밀리면 음식을 받지 못하는 손님도 생길 수 있습니다.
# 예를 들어, 도도새의 근무 시간이 180분이고, 들어온 주문에 걸리는 시간이 주문이 들어온 순으로 각각 45, 30, 55, 20, 80, 20분이라고 합니다.
# 이 경우, 단 4개의 주문이 처리될 수 있습니다. 처음 4개의 주문이 완료되는 데 걸리는 시간은 150분으로 근무 시간 내에 처리할 수 있지만, 5번째 주문까지 완료하려면 230분이 걸리기에 처리할 수 없습니다.
# 도도새는 오늘 최대 몇 개의 주문을 처리할 수 있을지 궁금해졌습니다. 오늘 들어온 주문이 주어졌을 때, 도도새가 몇 개의 주문을 처리할 수 있는지 계산하는 프로그램을 작성하세요.

# [입력]
# 첫 번째 줄에는 들어온 주문의 수를 나타내는 정수 N과 도도새의 근무 시간(분 단위) T를 입력합니다.
# (1 ≤ N ≤ 50,\ 1 ≤ T ≤ 500)
# 두 번째 줄은 N개의 100 이하인 자연수를 입력하며, 각 주문을 처리하는 데 걸리는 시간을 주문 순서대로 입력합니다.

# [출력]
# 주문 순서대로 요리했을 때, 근무 시간 내에 처리할 수 있는 주문의 개수를 출력합니다.

# [입력 예시]
# 6 180
# 45 30 55 20 80 20

# [출력 예시]
# 4

# [Code]
n, total = map(int,input().split())
data = list(map(int,input().split()))

count = 0
result = 0

for x in data:
    if result + x > total:      # 전체 근무 시간보다, 현재 근무시간 + 다음 할 주문에 대한시간이 더 크게 되면 퇴근
        break
    result += x     # 현재 근무 시간에다가, 방금 주문 해결한 시간 누적
    count += 1      # 해결한 주문 수 카운팅

print(count)        # 총 해결한 주문 수 출력
