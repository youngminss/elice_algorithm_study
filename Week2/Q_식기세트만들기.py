# [그리디] 식기 세트 만들기

# 엘리스 공장에서는 앵무새 공장에서 숟가락과 젓가락을 배송받아 식기 세트를 만듭니다.

# 앵무새 공장에서 식기를 받아 올 때 숟가락과 젓가락이 섞여 있는 채로 받습니다.
# 식기 세트는 숟가락 1개 젓가락 2개가 들어갑니다.
# 그런데 앵무새 공장의 실수로 인해 엘리스 공장으로 식기가 주문한 것보다 많은 식기가 배송되었습니다.
# 그래서 엘리스 공장은 식기를 반납하려고 합니다.

# ※반납할 식기의 수는 숟가락과 젓가락 개수의 합이며, 엘리스 공장에서 원하는 대로 숟가락과 젓가락의 개수를 조정하여 반납하면 됩니다.
# 엘리스 공장은 가지고 있는 식기를 활용해 가능한 한 많이 식기 세트를 만들고 싶어 합니다.
# 최대로 만들 수 있는 식기 세트의 수를 구하는 프로그램을 작성하세요.

# [입력]
# 첫번째 줄에 젓가락의 개수 C, 숟가락의 개수 S, 반납 할 식기의 개수 E를 차례로 입력합니다.
# (0≤C≤100),(0≤S≤100),(0≤E≤S+C)

# [출력]
# 만들 수 있는 식기의 최댓값을 출력합니다.

# [입력 예시]
# 50 40 4

# [출력 예시]
# 25

# [Code]

def solution():
    c,s,e = map(int,input().split())

    if 2*s + e < c:
        c -= e
        result = c // 2
        if result > s :
            print(s)
        else:
            print(result)
    else :
        s -= e
        result = c // 2
        if result > s :
            print(s)
        else:
            print(result)

if __name__ == '__main__':
    solution()


# [아이디어]
# 식기세트 =  항상 1숟가락 + 2젓가락 이 세트이므로, 
# 숟가락수 * 2 정도의 젓가락이 일단 없으면, 그리디 충족조건에 맞지 않는다고 생각했다.
# 그래서, 1차적으로 우선순위가 되는것은 "젓가락" 이라고 생각했다.

# 반환해야할 E 만큼의 식기를 결정할 때, 주어진 s(숟가락 수) * 2 + e(반환할 식기수) 보다 c(젓가락 수)가 월등히 많다면
# => c(젓가락 수) - e(반환 식기 수)
# 그정도는 아닌, 2 * s + e > c 이면, 숟가락이 아무리 많아도, 젓가락이 없으면, 세트를 못 만들기떄문에, 우선순위가 적은 s(숟가락 수) - e(반환식기 수)로 연산하도록 구현

# [아쉬운 점]
# - 문제에서 요구하는 조건은 간단한건데, 내가 괜히 비슷한 작업을 2개로 나눠서 코드가 길어진게 아닌가 생각이 좀 든다.

# [피드백 (▲)]




