# [수학] 훌라후프

# 코더 초등학교의 학생들은 체육 시간에 훌라후프를 이용하여 수업하였습니다. 아이들의 덩치는 제각각이기에 훌라후프의 크기 역시 제각각이었습니다.
# 수업이 끝나고 선생님은 N개의 훌라후프를 수거하여 각각의 훌라후프가 앞에 있는 훌라후프와 뒤에 있는 훌라후프가 접하도록 바닥에 내려놓았습니다.

# [반지름이 각각 다른 톱니바퀴 맞물려 있는 느낌]

# 장난을 좋아하는 체셔는 첫 번째 훌라후프를 돌리기 시작했고, 나머지 훌라후프도 같이 돌아간다는 사실을 발견했습니다. 이렇게 장난을 치다 보니 첫 번째 훌라후프를 한 바퀴 돌리면, 나머지 훌라후프는 몇 바퀴 도는지 궁금해졌습니다.
# 각각의 훌라후프의 반지름이 주어졌을 때, 첫 번째 훌라후프를 한 바퀴 돌리면, 나머지 훌라후프는 몇 바퀴 돌아가는지 구하는 프로그램을 작성하세요.

# [입력]
# 첫째 줄에 훌라후프의 개수를 나타내는 자연수 N을 입력합니다.
# (3 ≤ N ≤ 100)
# 다음 줄에는 훌라후프의 반지름을 선생님이 바닥에 놓은 순서대로 입력합니다. 반지름은 1과 1000을 포함하는 사이의 자연수입니다.
# [출력]
# 출력은 총 N-1 줄입니다. 첫 번째 훌라후프를 제외한 각각의 훌라후프에 대해서, 첫 번째 훌라후프를 한 바퀴 돌리면 그 훌라후프는 몇 바퀴 도는지 기약 분수 형태 A/B로 출력합니다.

# [입력 예시]
# 4
# 12 3 8 4
# [출력 예시]
# 4/1
# 3/2
# 3/1

def solution():
    n = int(input())
    datas = list(map(int,input().split()))

    for i in range(1,n):
        Numerator = datas[0]
        denominator = datas[i]
        
        divide = datas[i]
        while True:
            if divide == 1:
                break
            if Numerator % divide == 0 and denominator % divide == 0:
                Numerator //= divide
                denominator //= divide
            divide -= 1
        print(str(Numerator)+'/'+str(denominator))

if __name__ == '__main__' :
    solution()


# 아이디어
# - 보통 톱니바퀴 비슷한 문제가 나오면, 무엇보다, 기준으로 주어진 것을 기준으로 ? 세워서, 최소 단위(1초,1번,1바퀴..등등)로 나눠서 생각해보면 좋은 것 같다.
# - 소수점으로 표현하는것은 당연히 쉬운것이라고 생각하고 있지만, 허를 찔러, 기약 분수로 표현하는 문제가 있는데, 내가 구한 방법은
# - 분자 분모 변수를 각각 datas[0] (기준) , datas[i] (i번째 훌라후프)로 두고서, datas[i] 부터 시작해서, 1이 될때까지 1씩 감소하면서, 분자 분모 공통으로 나눌 수 있는 수가 있으면
# - 둘 다 나눈것의 몫을 새로운 분자 분모로 설정하는 것을 반복하고, 반복문을 탈출한 매 차례, 분자 분모를 출력하도록 했다.

# # 결과 [100]

# # 질문거리
# - 파이썬에 분수를 구하는 라이브러리는 없나 ? 생각해봤다.