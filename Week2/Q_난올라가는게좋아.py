# [정렬] 난 올라가는게 좋아
# 도도새는 날지 못하는 새입니다. 날지는 못하지만 상승하는 것을 좋아합니다. 그래서 그래프에 점을 찍을 때에도 y좌표가 증가하는 순으로, y좌표가 같으면 x좌표가 증가하는 순서로 정렬한 다음 찍습니다.
# 2차원 평면 위의 점 N개가 주어졌을 때, 도도새의 방식대로 정렬하는 프로그램을 작성하세요.

# [입력]
# 첫째 줄에 점의 개수인 정수 N 을 입력합니다.
# (1 ≤ N ≤ 1,000)
# 둘째 줄부터 N개의 줄에는 i번점의 위치 x_ix i 와 y_iy i 를 입력합니다.
# (-10,000 ≤ x_i,\ y_i ≤ 10,000)
# 좌표는 항상 정수이고, 위치가 같은 두 점은 없습니다.

# [출력]
# 정렬된 점들을 순서대로 출력합니다.

# [입력 예시1]
# 5
# 1 5
# 1 2
# 3 -1
# 4 4
# -1 -2
# [입력 예시2]
# 5
# 1 5
# 1 2
# 3 -1
# 2 -1
# -1 -2

# [출력 예시1]
# -1 -2
# 3 -1
# 1 2
# 4 4
# 1 5
# [출력 예시2]
# -1 -2
# 2 -1
# 3 -1
# 1 2
# 1 5


# [Code]
def solution():
    n = int(input())
    datas = []

    for _ in range(n):
        datas.append(list(map(int,input().split())))

    datas.sort(key=lambda data: (data[1],data[0]))
    for data in datas:
        for x in data:
            print(x,end=' ')
        print()

if __name__ == '__main__':
    solution()


# 아이디어
# - 2차원 리스트형태로 일단 주어진 조건에 맞게 입력한다.
# - sort를 할껀데, 정렬 조건이 1차,2차가 있는것이 이 문제에 포인트인듯하다.
# - (x,y)좌표 순으로, n개의 좌표가 입력되는데, 이것을
# - 1차적으로는 y좌표로 정렬, 같은 y좌표일 경우는
# - 2차적으로 x좌표까지 비교하면서, 오름차순으로 정렬된 형태로 출력을 하면된다.

# # 체크포인트
# - 아직 파이썬으로 알고리즘이 낯설어서, sort는 1가지 기준으로만, 지금까지 정렬하는 간단한 문제를 풀었었는데
# - ★ 이번 문제처럼, 정렬조건이 1차,2차,,, 이런식으로 정렬을 해야한다면, sort()의 'key' 옵션을 잘 알고 있도록 하자.
# - iterator.sort(key=lambda : iterator : 정렬기준 ) 형식이다.
# - 물론, lambda식 대신에, 커스텀함수를 인자로 넘겨도 되는듯하다.
# - 앞에 - 를 붙이면, 현재 정렬기준에서, 반대로 적용시켜준다고 한다. 