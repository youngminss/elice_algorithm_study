# [정수론] 싸이코패스의 일기장

# 싸이코 연쇄살인마 엄동식은 범행을 저지르고 난 후 과정을 일기장에 적는 습관이 있습니다.
# 다만 용의주도하고 치밀한 엄동식은 일기장을 분실할 경우를 대비하여 자기만의 규칙으로 일기를 작성하였습니다.
# 일기를 쓰는 규칙은 26개의 대문자 알파벳으로 작성한 일기를 알파벳 순서대로 4개씩 건너뛰어 작성하는 것이라고 합니다.
# 예를 들면 ‘A’는 ‘D’로, ‘B’는 ‘E’로, 그리고 알파벳의 마지막 4글자인 W, X, Y, Z 같은 경우는 다시 처음으로 돌아와 A, B, C, D로 변환하여 작성한다고 합니다.
# 엄동식의 일기를 원래의 문자로 해독하는 프로그램을 작성하세요.

# [입력]
# 알파벳 대문자로 구성된 하나의 문자열을 입력합니다.
# (문자열은 1,000자 이하입니다.)
# [출력]
# 해독한 문자열을 출력합니다.동식의 일기를 원래의 문자로 해독하는 프로그램을 작성하세요.

# [입력 예시]
# IPMGI
# [출력 예시]
# ELICE

def solution():
    input_str = input()
    result = ""
    for char in input_str:
        change_charNum = ord(char) - 65
        result += str(chr(65+((change_charNum - 4) % 26)))
    print(result)

if __name__ == '__main__':
    solution()


# 아이디어
# - 문제를 쭉~끝까지 읽으면, 단순하긴하다. 입력된 대문자 문자열들에 각각의 알파벳을, 주어진 규칙에 따라 변경했을 때
# - 새롭게 만들어지는 문자열을 출력하게 하면 된다.
# - 정답이 될 빈 문자열을 만들고, 거기에, 입력된 문자열 하나하나마다, ord() 함수를 사용해서, 문자를 아스키코드 정수로 만들어놓고
# - 이를 대문자 'A'의 아스키 코드값 65와의 차를 구한다.
# - 포인트는, 결과 문자열에 누적해서, 원래 문자를 저장할 때 연산인데
# - 문제에 제시한대로 -4를 차감하는 것은, 당연한건데,'W', 'X', 'Y', 'Z' -> 'A','B','C','D' 을 주의해서
# - 즉, 전체 알파벳 개수인 26 으로 항상 마지막에 나눠줘서, 싸이클이 될 수 있도록 해주는 것이 포인트

# # 결과 [100]

# # 질문거리?
# - 일단, 이런 문제는 몇번 풀어봐서, 풀이 접근은 어느정도 알고 있었다.
# - "정수론" 이라는 테마의 문제인데, 코딩테스트 알고리즘 문제에 이 "정수론"이라는 개념 자체에 문제가 나올 것 같진 않고, 응용하는 수준으로는 쓰일수 있다고 생각하는데 맞나 ?