# [이분탐색] 회장님의 고민

# 엘리스 토끼는 여러 사업을 하고 있는 회사의 회장입니다.
# 회장의 역할 중 하나는 여러 사업의 예산요청을 심사하여 회사의 예산을 분배하는 것입니다. 회사예산의 총액은 미리 정해져 있어서 모든 예산요청을 배정해 주기는 어려울 수도 있습니다. 그래서 정해진 총액 이하에서 가능한 한 최대의 총예산을 다음과 같은 방법으로 배정합니다.
# 모든 요청이 배정될 수 있는 경우에는 요청한 금액을 그대로 배정한다.
# 모든 요청이 배정될 수 없는 경우에는 특정한 정수 상한액을 계산하여 그 이상인 예산요청에는 모두 상한액을 배정한다. 상한액 이하의 예산요청에 대해서는 요청한 금액을 그대로 배정한다.

# 예를 들어, 전체 회사의 예산이 510이고 4개 사업의 예산요청이 각각 140, 110, 135, 150이라고 합시다. 이 경우, 상한액을 133으로 잡으면, 위의 요청들에 대해서 각각 133, 110, 133, 133을 배정하고 그 합이 509로 가능한 최대가 됩니다.
# 여러 사업의 예산요청과 회사예산의 총액이 주어졌을 때, 위의 조건을 모두 만족하도록 예산을 배정하는 프로그램을 작성하세요.

# [입력]
# 첫째 줄에는 사업의 수를 의미하는 정수 N을 입력합니다.
# (3 ≤ N ≤ 10,000)
# 다음 줄에는 각 사업의 예산요청을 표현하는 N개의 정수를 입력합니다. 이 값들은 모두 1 이상 100,000 이하입니다.
# 그다음 줄에는 총 예산을 나타내는 정수 M을 입력합니다.
# (N ≤ M ≤ 1,000,000,000)
# [출력]
# 첫째 줄에는 배정된 예산들 중 최댓값인 정수를 출력합니다.

# [입력 예시]
# 4
# 140 110 135 150
# 510
# [출력 예시]
# 133

def solution():
    n = int(input())
    datas = list(map(int,input().split()))
    money = int(input())

    datas.sort()
    mini = datas[0]
    maxi = datas[-1]
    
    if sum(datas) <= money:
        print(datas[-1])
    else:
        while True:
            num_sum = 0
            mid = (mini + maxi) // 2

            if mid == mini or mid == maxi:
                print(mid)
                break

            for data in datas:
                if data > mid: num_sum += mid
                else: num_sum += data

            if num_sum > money :
                maxi = mid
            elif num_sum < money :
                mini = mid
            else :
                print(mid)
                break

if __name__ == '__main__':
    solution()


# # 아이디어
# - 기본 입력이 정렬되어진 채로 들어오고, 가장 상한을 찾는 문제라, 가장작고, 큰 양쪽 끝값 부터 시작해서, 평균값을 이용하려했다.
# - 이진탐색방식으로 진행해보려 했다.

# # 결과
# - 80

# # 질문
# - 특정상황 하나가 해결이 안되는 것 같은데, 어느 부분인지, 찾기가 힘듭니다.. ㅠ
