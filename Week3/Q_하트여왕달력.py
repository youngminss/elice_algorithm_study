# [브루트포스] 하트여왕 달력

# 하트 여왕이 사는 나라에서는 하트여왕력(曆)을 사용합니다.
# 하트여왕력(曆)은 세 개의 숫자를 사용하며 각각의 수는 불, 물, 그리고 땅을 상징합니다.
# 불을 나타내는 수를 F, 물을 나타내는 수를 W, 땅을 나타내는 수를 E라고 했을 때, 이 세 수는 서로 다른 범위를 가집니다.
# (1 ≤ F ≤ 15, 1 ≤ W ≤ 28, 1 ≤ E ≤ 19)
# 지구에서 사용하는 그레고리력의 1년은 하트여왕력으로 1 1 1로 나타낼 수 있습니다. 1년이 지날 때마다, 세 수는 모두 1씩 증가합니다. 만약, 어떤 수가 범위를 넘어갈 때에는 1이 됩니다.
# 예를 들어, 15년은 15 15 15로 나타낼 수 있습니다. 하지만, 1년이 지나서 16년이 되면 16 16 16이 아니라 1 16 16이 됩니다. 이유는 F는 15까지라서 범위를 넘어가기 때문입니다.
# F, W, E가 주어지고, 1년이 하트여왕력으로 1 1 1일 때, 하트여왕력의 F W E를 그레고리력으로 몇 년인지 구하는 프로그램을 작성하세요.

# [입력]
# 첫째 줄에 세 수 F, W, E을 입력합니다.
# (1 ≤ F ≤ 15, 1 ≤ W ≤ 28, 1 ≤ E ≤ 19)
# [출력]
# 첫째 줄에 F W E로 표시되는 가장 빠른 연도를 출력합니다.
# 1 1 1은 항상 1이기 때문에, 정답이 음수가 나오는 경우는 없습니다.

# [입력 예시]
# 15 28 19
# [출력 예시]
# 7980

def solution():
    F,W,E = map(int,input().split())
    f,w,e = (1,1,1)
    heart_year = 1

    while True:
        if F == f and W == w and E == e:
            break
        if (f + 1) % 16 == 0: f = 1
        else: f = (f + 1) % 16

        if (w + 1) % 29 == 0: w = 1
        else: w = (w + 1) % 29

        if (e + 1) % 20 == 0: e = 1
        else: e = (e + 1) % 20

        heart_year += 1
    print(heart_year)

if __name__ == '__main__':
    solution()

# # 아이디어
# - 목표 F,W,E 가 주어질떄, 각각에 대응하는 새로은 f,w,e 를 1,1,1 로 초기화 시킨다. (그레고리력 1년 의미)
# - 매번, F,W,E 와 f,w,e 가 같은 지 비교한다. (같을 때 까지)
# - 같게 되는 순간의, 매번 +1 씩 증가하는 heart_year를 출력하고
# - F,W,E 중 하나라도 같지 않는 다면, 각각을 +1 씩 증가시키면서 (단,각 수의 범위를 초과하는 것을 컨트롤하는 것이 필요) heart_year를 증가시킨다.

# # 결과
# [100]

# # 질문거리
# X
