# [구현][사탕 가게]

# 엘리스의 이상한 사탕 가게에는 일렬로 놓인 판매대가 있습니다. 엘리스는 사탕을 채우는 개수에 특별한 규칙을 두어 판매대를 채웠습니다.
# 첫 번째 판매대의 사탕은 n개부터 시작해 다음번 판매대의 사탕의 개수는 다음과 같은 규칙을 적용해 채웁니다.
# n이 짝수라면, 2로 나눈다.
# n이 홀수라면, 3을 곱한 뒤 1을 더한다.
# 사탕을 채우는 개수가 1이면 엘리스는 판매대를 채우는 것을 끝냈습니다.
# 첫 번째 판매대의 사탕 개수를 줬을 때, 판매대 중 사탕의 개수가 최대인 것을 골라, 사탕의 개수를 출력하는 프로그램을 작성하세요.

# [입력]
# 첫 번째 줄에 엘리스가 처음에 판매대에 넣은 사탕의 개수인 자연수 N을 입력합니다.
# (1≤N≤100,000)
# [출력]
# 첫 번째 줄에 판매대 중 사탕의 개수가 최대인 것을 골라 사탕의 개수를 출력합니다.

# [입력 예시]
# 9
# [출력 예시]
# 52

def solution():
    datas = [n]
    while n != 1:
        if n % 2 == 0:
            n = n // 2
        else:
            n = n * 3 + 1
        datas.append(n)
    datas.sort(reverse=True)
    print(datas[0])
    
if __name__ == '__main__': 
    solution()


# # 아이디어
# - 처음, n 값을 받고나서, 문제를 읽어보면, 언젠가는 n == 1 이 되는 시점이 있을 것이라 생각했고, 실제로, 문제 조건대로 예시를 돌려봤더니, 20차례에 걸쳐서 n == 1 이됬다.
# - 언제 끝날지는, 딱히 모르는 시점에서, 매 차례, 변하는 수를, 리스트에 담고, 마지막 부분에서, 리스트를 내림차순으로 정렬하고, 가장 첫번째 수를 출력한다.

# # 결과 [100]

# # 질문거리
# 시간을 줄일 수 있는 방법이 따로 있나 ?